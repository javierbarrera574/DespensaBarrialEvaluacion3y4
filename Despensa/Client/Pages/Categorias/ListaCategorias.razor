@page "/Categorias"
@inject IHttpService http
@using Despensa.BD.Datos.Entidades
@using Despensa.Client.Servicios


<h3>Lista de Categorias</h3>

<a class="btn btn-primary" href="Categorias/Crear">Nueva categoria</a>




<table>
    <tr>
        <th>Tipo</th>
        <th>Codigo</th>
        <th>Producto</th>
    </tr>

    @if (categorias == null)
    {
        <tr>Cargando.......</tr>
    }
    else if (categorias.Count == 0)
    {
        <tr>No existen datos</tr>
    }
    else
    {
        @foreach (var item in categorias)
        {
            <tr>
                <td>@item.TipoCategoria</td>
                <td>@item.CodigoCategoria</td>
                <td>@item.Producto.NombreProducto</td>
                <td>
                    <a class="btn btn-primary"
               href="Categorias/Editar/@item.Id">
                        Editar
                    </a>
                </td>

            </tr>
        }
    }
</table>






<br />
<br />


    <h3>Lista productos con categoria</h3>


       <br />
       <a class="btn btn-primary" href="/Productos/Crear">Productos</a>
     <br />
      <br />



<table>

    <tr>
        <th>Nombre</th>
        <th>Descripcion</th>
        <th>Vencimiento</th>
        <th>Precio</th>
    </tr>

    @if (productos == null)
    {
        <tr>Cargando.......</tr>
    }
    else if (productos.Count == 0)
    {
        <tr>No existen datos</tr>
    }
    else
    {
        @foreach (var item in productos)
        {
            <tr>
                <td>@item.NombreProducto</td>
                <td>@item.DescripcionProducto</td>
                <td>@item.FechaVencimiento</td>
                <td>@item.PrecioProducto</td>

            </tr>
        }
    }
</table>



@code {

    List<Categoria> categorias;

    List<Producto> productos;

    Categoria CategoriaBorrar;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await LeerCategorias();
        await LeerProductos();
    }

    private async Task LeerCategorias()
    {
        var respuesta = await http.Get<List<Categoria>>("api/Categorias");
        if (!respuesta.Error)
        {
            categorias = respuesta.Respuesta;
        }
    }

    private async Task LeerProductos()
    {
        var respuesta = await http.Get<List<Producto>>("api/Productos");
        if (!respuesta.Error)
        {
             productos = respuesta.Respuesta;
        }
    }
}